betas[2] <- mean(c(27.2,	24.6)) - row_means[1]
betas[3] <- mean(c(43.1,	39.5)) - row_means[2]
betas[4] <- mean(c(23.2,	24.2)) - row_means[2]
betas[5] <- mean(c(45.2,	33.0)) - row_means[3]
betas[6] <- mean(c(24.8,	22.2)) - row_means[3]
row_means
alphas
betas
y_hat <- vector("numeric")
index <- 1
for (i in 1:3) {
for (j in 1:4) {
y_hat[index] <- row_means[i] + alphas[i] + betas[j]
index <- index+1
}
}
y_hat
residuals <- (1/(3-1))*(1/(3-1))*(1/(2-1))*sum((all-y_hat)^2); residuals
betas[1] <- mean(c(39.5,	38.6)) - row_means[1]
betas[2] <- mean(c(27.2,	24.6)) - row_means[1]
betas[3] <- mean(c(43.1,	39.5)) - row_means[2]
betas[4] <- mean(c(23.2,	24.2)) - row_means[2]
betas[5] <- mean(c(45.2,	33.0)) - row_means[3]
betas[6] <- mean(c(24.8,	22.2)) - row_means[3]
wo_025 <- c(39.5, 43.1, 45.2)
wo_1 <- c(38.6, 39.5, 33)
w_025 <- c(27.2, 23.2, 24.8)
w_1 <- c(24.6, 24.2, 22.2)
all <- c(wo_025, wo_1, w_025, w_1)
all
col_means <- c(mean(wo_025), mean(wo_1), mean(w_025), mean(w_1))
row_means <- c(129.9/4, 130/4, 125.2/4); row_means
grandmean <- mean(all); grandmean
#step 2 estimating our model
alphas <- row_means-grandmean; alphas
#without permanganate
wo_p <- mean(c(wo_025, wo_1)); wo_p
#with permanganate
w_p <- mean(c(w_025, w_1)); w_p
#comparing average of each column to its condition average
betas <- vector("numeric")
betas[1] <- col_means[1] - wo_p
betas[2] <- col_means[2] - wo_p
betas[3] <- col_means[3] - w_p
betas[4] <- col_means[4] - w_p
y_hat <- vector("numeric")
index <- 1
for (i in 1:3) {
for (j in 1:4) {
y_hat[index] <- row_means[i] + alphas[i] + betas[j]
index <- index+1
}
}
y_hat
all
all <- c(39.5, 38.6, 27.2, 24.6, 43.1, 39.5, 23.2, 24.2, 45.2, 33.0, 24.8, 22.2)
y_hat
residuals <- (1/(3-1))*(1/(3-1))*(1/(2-1))*sum((all-y_hat)^2); residuals
residuals <- (1/(3-1))*(1/(4-1))*(1/(2-1))*sum((all-y_hat)^2); residuals
#variance of replications
v1 <- row_means - grandmean
#variance of replications
v1 <- row_means - grandmean; v1
#variance of replications
v1 <- sum((row_means - grandmean)^2); v1
#variance of replications
replication_effect <- sum((row_means - grandmean)^2); v1
residuals <- (1/(3-1))*(1/(4-1))*(1/(2-1))*sum((all-y_hat)^2)
all <- c(39.5, 38.6, 27.2, 24.6, 43.1, 39.5, 23.2, 24.2, 45.2, 33.0, 24.8, 22.2)
y_hat
rep(0, 5)
beta_1_1 <- mean(c(39.5, 38.6)) - row_means[1]; beta_1_1
#assuming y_i_j_1 = y_i_j_2
r1_1 <- rep(row_means[1] + alpha[1] + betas[1], 2)
#assuming y_i_j_1 = y_i_j_2
r1_1 <- rep(row_means[1] + alphas[1] + beta_1_1, 2)
#assuming y_i_j_1 = y_i_j_2
r1_1 <- rep(row_means[1] + alphas[1] + beta_1_1, 2) r1_1
#assuming y_i_j_1 = y_i_j_2
r1_1 <- rep(row_means[1] + alphas[1] + beta_1_1, 2); r1_1
beta_1_2 <- mean(c(27.2, 24.6)) - row_means[1]
r1_2 <- rep(row_means[1] + alpha[1] + beta_1_2, 2); r1_2
r1_2 <- rep(row_means[1] + alphas[1] + beta_1_2, 2); r1_2
#comparing average of each column to its condition average
betas <- vector("numeric")
betas[1] <- mean(c(39.5, 38.6)) - row_means[1]
betas[2] <- mean(c(27.2, 24.6)) - row_means[1]
betas[3] <- mean(c(43.1, 39.5)) - row_means[2]
betas[4] <- mean(c(23.2, 24.2)) - row_means[2]
betas[5] <- mean(c(45.2, 33.0)) - row_means[3]
betas[6] <- mean(c(24.8, 22.2)) - row_means[3]
#step 2 estimating our model
alphas <- row_means-grandmean; alphas
#without permanganate
wo_p <- mean(c(wo_025, wo_1)); wo_p
#with permanganate
w_p <- mean(c(w_025, w_1)); w_p
#comparing average of each column to its condition average
betas <- vector("numeric")
betas[1] <- mean(c(39.5, 38.6)) - row_means[1]
betas[2] <- mean(c(27.2, 24.6)) - row_means[1]
betas[3] <- mean(c(43.1, 39.5)) - row_means[2]
betas[4] <- mean(c(23.2, 24.2)) - row_means[2]
betas[5] <- mean(c(45.2, 33.0)) - row_means[3]
betas[6] <- mean(c(24.8, 22.2)) - row_means[3]
wo_025 <- c(39.5, 43.1, 45.2)
wo_1 <- c(38.6, 39.5, 33)
w_025 <- c(27.2, 23.2, 24.8)
w_1 <- c(24.6, 24.2, 22.2)
col_means <- c(mean(wo_025), mean(wo_1), mean(w_025), mean(w_1))
row_means <- c(129.9/4, 130/4, 125.2/4); row_means
grandmean <- mean(all); grandmean
#step 2 estimating our model
alphas <- row_means-grandmean; alphas
#without permanganate
wo_p <- mean(c(wo_025, wo_1)); wo_p
#with permanganate
w_p <- mean(c(w_025, w_1)); w_p
#comparing average of each column to its condition average
betas <- vector("numeric")
betas[1] <- mean(c(39.5, 38.6)) - row_means[1]
betas[2] <- mean(c(27.2, 24.6)) - row_means[1]
betas[3] <- mean(c(43.1, 39.5)) - row_means[2]
betas[4] <- mean(c(23.2, 24.2)) - row_means[2]
betas[5] <- mean(c(45.2, 33.0)) - row_means[3]
betas[6] <- mean(c(24.8, 22.2)) - row_means[3]
for (i in 1:3) {
for (j in 1:6) {
y_hat[index] <- row_means[i] + alphas[i] + betas[j]
y_hat[index+1] <- row_means[i] + alphas[i] + betas[j]
index <- index+2
}
}
y_hat <- vector("numeric")
index <- 1
for (i in 1:3) {
for (j in 1:6) {
y_hat[index] <- row_means[i] + alphas[i] + betas[j]
y_hat[index+1] <- row_means[i] + alphas[i] + betas[j]
index <- index+2
}
}
length(y_hat)
r1_1 <- rep(row_means[1] + alphas[1] + betas[1], 2); r1_1
r1_2 <- rep(row_means[1] + alphas[1] + betas[2], 2); r1_2
y_hat
r1_2 <- rep(row_means[1] + alphas[1] + betas[2], 2); r1_2
r2_1 <- rep(row_means[2] + alphas[2] + betas[3], 2); r2_1
y_hat <- vector("numeric")
y_hat <- c(rep(row_means[1] + alphas[1] + betas[1], 2), #r1_1
rep(row_means[1] + alphas[1] + betas[2], 2), #r1_2
rep(row_means[2] + alphas[2] + betas[3], 2), #r2_1
rep(row_means[2] + alphas[2] + betas[4], 2), #r2_2
rep(row_means[2] + alphas[3] + betas[5], 2), #r3_1
rep(row_means[2] + alphas[3] + betas[6], 2)) #r3_2
y_hat
all <- c(39.5, 38.6, 27.2, 24.6, 43.1, 39.5, 23.2, 24.2, 45.2, 33.0, 24.8, 22.2)
residuals <- (1/(3-1))*(1/(4-1))*(1/(2-1))*sum((all-y_hat)^2)
residuals
residuals <- (1/(3-1))*(1/(2-1))*(1/(2-1))*sum((all-y_hat)^2)
residuals <- (1/(3-1))*(1/(2-1))*(1/(2-1))*sum((all-y_hat)^2); residuals
# 2 way anova
s_orange <- c(112, 86, 80)
m_grapefruit <- c(90, 73, 62)
c_mandarian <- c(123, 89, 81)
Y <- c(s_orange, m_grapefruit, c_mandarian)
column_means <- c(92.66, 75, 97.66)
row_means <- c(108.33, 82.66, 74.33)
all_mean <- 88.44
alphas <- row_means - all_mean
betas <- column_means - all_mean
y_hat <- vector("numeric")
index <- 1
for (i in 1:3) {
for (j in 1:3) {
y_hat[index] <- all_mean + alphas[j] + betas[i]
index <- index+1
}
}
var_species_means <- (3/(3-1)) * sum((column_means-all_mean)^2)
var_shading_means <- (3/(3-1)) * sum((row_means-all_mean)^2)
residuals <- (1/(3-1))*(1/(3-1))*sum((Y-y_hat)^2)
species_effect <- var_species_means/residuals; species_effect
shading_effect <- var_shading_means/residuals; shading_effect #shading effect is same as the hint on the hw page!!
F_critical <- qf(p=.95, df1=2, df2=6); F_critical
residuals <- (1/(3-1))*(1/(3-1))*sum((Y-y_hat)^2); residuals
#step 1 data
wo_025 <- c(39.5, 43.1, 45.2)
wo_1 <- c(38.6, 39.5, 33)
w_025 <- c(27.2, 23.2, 24.8)
w_1 <- c(24.6, 24.2, 22.2)
col_means <- c(mean(wo_025), mean(wo_1), mean(w_025), mean(w_1))
row_means <- c(129.9/4, 130/4, 125.2/4); row_means
grandmean <- mean(all); grandmean
#step 2 estimating our model
alphas <- row_means-grandmean; alphas
#without permanganate
wo_p <- mean(c(wo_025, wo_1)); wo_p
#with permanganate
w_p <- mean(c(w_025, w_1)); w_p
#comparing average of each column to its condition average
betas <- vector("numeric")
betas[1] <- mean(c(39.5, 38.6)) - row_means[1]
betas[2] <- mean(c(27.2, 24.6)) - row_means[1]
betas[3] <- mean(c(43.1, 39.5)) - row_means[2]
betas[4] <- mean(c(23.2, 24.2)) - row_means[2]
betas[5] <- mean(c(45.2, 33.0)) - row_means[3]
betas[6] <- mean(c(24.8, 22.2)) - row_means[3]
#assuming y_i_j_1 = y_i_j_2
#definitely not the most efficient way to do it but lol
y_hat <- c(rep(row_means[1] + alphas[1] + betas[1], 2), #r1_1
rep(row_means[1] + alphas[1] + betas[2], 2), #r1_2
rep(row_means[2] + alphas[2] + betas[3], 2), #r2_1
rep(row_means[2] + alphas[2] + betas[4], 2), #r2_2
rep(row_means[2] + alphas[3] + betas[5], 2), #r3_1
rep(row_means[2] + alphas[3] + betas[6], 2)) #r3_2
y_hat
all <- c(39.5, 38.6, 27.2, 24.6, 43.1, 39.5, 23.2, 24.2, 45.2, 33.0, 24.8, 22.2) #reorganizing the order to match
residuals <- (1/(3-1))*(1/(2-1))*(1/(2-1))*sum((all-y_hat)^2); residuals
#Step 3 Analysis of Variance
#variance of replications
replication_effect <- sum((row_means - grandmean)^2); v1
condition_replication
#step 1 data
wo_025 <- c(39.5, 43.1, 45.2)
wo_1 <- c(38.6, 39.5, 33)
w_025 <- c(27.2, 23.2, 24.8)
w_1 <- c(24.6, 24.2, 22.2)
col_means <- c(mean(wo_025), mean(wo_1), mean(w_025), mean(w_1))
row_means <- c(129.9/4, 130/4, 125.2/4); row_means
grandmean <- mean(all); grandmean
#Step 2 Estimating our Model
alphas <- row_means-grandmean
#comparing each replications average of each condition to row mean
betas <- vector("numeric")
betas[1] <- mean(c(39.5, 38.6)) - row_means[1]
betas[2] <- mean(c(27.2, 24.6)) - row_means[1]
betas[3] <- mean(c(43.1, 39.5)) - row_means[2]
betas[4] <- mean(c(23.2, 24.2)) - row_means[2]
betas[5] <- mean(c(45.2, 33.0)) - row_means[3]
betas[6] <- mean(c(24.8, 22.2)) - row_means[3]
#assuming y_i_j_1 = y_i_j_2
#definitely not the most efficient way to do it but lol
y_hat <- c(rep(row_means[1] + alphas[1] + betas[1], 2), #r1_1
rep(row_means[1] + alphas[1] + betas[2], 2), #r1_2
rep(row_means[2] + alphas[2] + betas[3], 2), #r2_1
rep(row_means[2] + alphas[2] + betas[4], 2), #r2_2
rep(row_means[2] + alphas[3] + betas[5], 2), #r3_1
rep(row_means[2] + alphas[3] + betas[6], 2)) #r3_2
y_hat
all <- c(39.5, 38.6, 27.2, 24.6, 43.1, 39.5, 23.2, 24.2, 45.2, 33.0, 24.8, 22.2) #reorganizing the order to match
residuals <- (1/(3-1))*(1/(2-1))*(1/(2-1))*sum((all-y_hat)^2); residuals
#Step 3 Analysis of Variance
#variance of replications
replication_effect <- sum((row_means - grandmean)^2); v1
condition_replication
y_hat
all <- c(39.5, 38.6, 27.2, 24.6, 43.1, 39.5, 23.2, 24.2, 45.2, 33.0, 24.8, 22.2) #reorganizing the order to match
y_hat
a;;
allsumall - y_hat
all
y_hat
all-y_hat
(all-y_hat)^2
sum((all-y_hat)^2)
sum((all-y_hat)^2)/2
#variance of replications
replication_effect <- sum((row_means - grandmean)^2); v1
var(c(2.58, 2.76))
mean(c(var(c(2.58, 2.76)), var(c(2.25, 2.81)), var(c(2.54, 2.73)), var(c(2.67, 2.28)), var(c(2.65, 2.49)))
mean(c(var(c(2.58, 2.76)), var(c(2.25, 2.81)), var(c(2.54, 2.73)), var(c(2.67, 2.28)), var(c(2.65, 2.49))))
var(c(2.58, 2.76))
var(c(2.25, 2.81))
var(c(2.54, 2.73))
var(c(2.67, 2.28))
var(c(2.65, 2.49))
a <- var(c(2.58, 2.76))
b <- var(c(2.25, 2.81))
c <-var(c(2.54, 2.73))
d <-var(c(2.67, 2.28))
e <-var(c(2.65, 2.49))
mean(c(a,b,c,d,e))
2*mean(c(a,b,c,d,e))
m11_1 <- mean(c(39.5, 38.6))
m11_1 <- mean(c(39.5, 38.6)); m1_1
m1_1 <- mean(c(39.5, 38.6)); m1_1
m1_1 - row_means[1]
betas[1]
#step 1 data
wo_025 <- c(39.5, 43.1, 45.2)
wo_1 <- c(38.6, 39.5, 33)
w_025 <- c(27.2, 23.2, 24.8)
w_1 <- c(24.6, 24.2, 22.2)
col_means <- c(mean(wo_025), mean(wo_1), mean(w_025), mean(w_1))
row_means <- c(129.9/4, 130/4, 125.2/4); row_means
grandmean <- mean(all); grandmean
m1_1 <- mean(c(39.5, 38.6))
m1_2 <- mean(c(27.2, 24.6))
m2_1 <- mean(c(43.1, 39.5))
m2_2 <- mean(c(23.2, 24.2))
m3_1 <- mean(c(45.2, 33.0))
m3_2 <- mean(c(24.8, 22.2))
#Step 2 Estimating our Model
alphas <- row_means-grandmean
#comparing each replications average of each condition to row mean
betas <- vector("numeric")
betas[1] <- m1_1 - row_means[1]
betas[2] <- m1_2 - row_means[1]
betas[3] <- m2_1 - row_means[2]
betas[4] <- m2_2 - row_means[2]
betas[5] <- m3_1 - row_means[3]
betas[6] <- m3_2 - row_means[3]
#assuming y_i_j_1 = y_i_j_2
#definitely not the most efficient way to do it but lol
y_hat <- c(rep(row_means[1] + alphas[1] + betas[1], 2), #r1_1
rep(row_means[1] + alphas[1] + betas[2], 2), #r1_2
rep(row_means[2] + alphas[2] + betas[3], 2), #r2_1
rep(row_means[2] + alphas[2] + betas[4], 2), #r2_2
rep(row_means[2] + alphas[3] + betas[5], 2), #r3_1
rep(row_means[2] + alphas[3] + betas[6], 2)) #r3_2
y_hat
y_hat
all <- c(39.5, 38.6, 27.2, 24.6, 43.1, 39.5, 23.2, 24.2, 45.2, 33.0, 24.8, 22.2) #reorganizing the order to match
sigma2 <- (1/(3-1))*(1/(2-1))*(1/(2-1))*sum((all-y_hat)^2)
sigma2 <- (1/(3-1))*(1/(2-1))*(1/(2-1))*sum((all-y_hat)^2); sigma2
a <- var(c(m1_1, m1_2))
b <- var(c(m2_1, m2_2))
c <- var(c(m3_1, m3_2))
2*mean(c(a,b,c))
#variance of replications
r_effect <- sum((row_means - grandmean)^2); v1
p_r_effect <- 2*mean(c(a,b,c)); p_r_effect
gm_p_effect <- residuals
gm_p_effect <- sigma2; gm_p_effect
#variance of replications
r_effect <- sum((row_means - grandmean)^2); r_effect
#mean of variances of the 3 groupings * 2 estimates sigma + n*sigma^2_B
a <- var(c(m1_1, m1_2))
b <- var(c(m2_1, m2_2))
c <- var(c(m3_1, m3_2))
p_r_effect <- 2*mean(c(a,b,c)); p_r_effect
gm_p_effect <- sigma2; gm_p_effect
Fobs <- p_r_effect/gm_p_effect
Fobs <- p_r_effect/gm_p_effect; Fobs
#for testing alpha:
Fobs_a <- r_effect/p_r_effect; Fobs_a
#for testing alpha:
Fobs_a <- r_effect/p_r_effect; Fobs_a
#for testing sigma^2_b:
Fobs <- p_r_effect/gm_p_effect; Fobs
Fcrit <- qf(p=.95, df1=3, df2=6); Fcrit
var(c(3.11, 3.44, 2.81, 3.30))
var(c(3.11, 3.44, 2.81, 3.30)) *4
var(c(3.28, 3.09, 3.03, 3.03))
litter1 <- c(1.18, 1.11)
litter2 <- c(1.36, 1.65)
litter3 <- c(1.37, 1.40)
litter4 <- c(1.07, 0.90)
all <- c(litter1, litter2, litter3, litter4)
N <- 8
k <- 4
G <- sum(all)
means <- c(mean(litter1), mean(litter2), mean(litter3), mean(litter4))
variances <- c(var(litter1), var(litter2), var(litter3), var(litter4))
#step 1: does the litter have an effect?
Fval <- (4 * var(means))/mean(variances); Fval
Fcritical <- qf(p=.95, df1=3, df2=4); Fcritical #fcritical
Fval > Fcritical
#step 2: estimating sigma2A
SS_between <- sum(litter1)^2/length(litter1) + sum(litter2)^2/length(litter2) + sum(litter3)^2/length(litter3) + sum(litter4)^2/length(litter4) - G^2/N
MS_between <- SS_between/(k-1); MS_between
SS_within <- sum((litter1-mean(litter1))^2) + sum((litter2-mean(litter2))^2) + sum((litter3-mean(litter3))^2) + sum((litter4-mean(litter4))^2)
MS_within <- SS_within/(N-k); MS_within
s2_A <- (MS_between-MS_within)/4; s2_A
s_orange <- c(112, 86, 80)
m_grapefruit <- c(90, 73, 62)
c_mandarian <- c(123, 89, 81)
Y <- c(s_orange, m_grapefruit, c_mandarian)
Y
column_means <- c(92.66, 75, 97.66)
col_means <- c(mean(s_orange), mean(m_grapefruit), mean(c_mandarian))
col_means
all_mean <- mean(Y)
all_mean <- mean(Y); all_mean
row_means <- c(mean(c(112, 90, 123), mean(c(86, 73, 89)), mean(c(80, 62, 81))))
row_means <- c(mean(c(112, 90, 123), mean(c(86, 73, 89)), mean(c(80, 62, 81)))); row_means
row_means <- c(mean(c(112, 90, 123)), mean(c(86, 73, 89)), mean(c(80, 62, 81)))); row_means
row_means <- c(mean(c(112, 90, 123)), mean(c(86, 73, 89)), mean(c(80, 62, 81))); row_means
s_orange <- c(112, 86, 80)
m_grapefruit <- c(90, 73, 62)
c_mandarian <- c(123, 89, 81)
Y <- c(s_orange, m_grapefruit, c_mandarian)
column_means <- c(mean(s_orange), mean(m_grapefruit), mean(c_mandarian))
row_means <- c(mean(c(112, 90, 123)), mean(c(86, 73, 89)), mean(c(80, 62, 81)))
all_mean <- mean(Y)
alphas <- row_means - all_mean
betas <- column_means - all_mean
y_hat <- vector("numeric")
index <- 1
for (i in 1:3) {
for (j in 1:3) {
y_hat[index] <- all_mean + alphas[j] + betas[i]
index <- index+1
}
}
Y
y_hat
print(Y)
print(y_hat)
var_species_means <- (3/(3-1)) * sum((column_means-all_mean)^2)
var_shading_means <- (3/(3-1)) * sum((row_means-all_mean)^2)
residuals <- (1/(3-1))*(1/(3-1))*sum((Y-y_hat)^2)
species_effect <- var_species_means/residuals
species_effect <- var_species_means/residuals; species_effect
shading_effect <- var_shading_means/residuals; shading_effect #shading effect is same as the hint on the hw page!!
F_critical <- qf(p=.95, df1=2, df2=6); F_critical
wo_025 <- c(39.5, 43.1, 45.2)
wo_1 <- c(38.6, 39.5, 33)
w_025 <- c(27.2, 23.2, 24.8)
w_1 <- c(24.6, 24.2, 22.2)
col_means <- c(mean(wo_025), mean(wo_1), mean(w_025), mean(w_1))
row_means <- c(129.9/4, 130/4, 125.2/4)
grandmean <- mean(c(wo_025, wo_1, w_025, w_1)); grandmean
m1_1 <- mean(c(39.5, 38.6))
m1_2 <- mean(c(27.2, 24.6))
m2_1 <- mean(c(43.1, 39.5))
m2_2 <- mean(c(23.2, 24.2))
m3_1 <- mean(c(45.2, 33.0))
m3_2 <- mean(c(24.8, 22.2))
#Step 2 Estimating our Model
alphas <- row_means-grandmean
betas <- vector("numeric")
betas[1] <- m1_1 - row_means[1]
betas[2] <- m1_2 - row_means[1]
betas[3] <- m2_1 - row_means[2]
betas[4] <- m2_2 - row_means[2]
betas[5] <- m3_1 - row_means[3]
betas[6] <- m3_2 - row_means[3]
y_hat <- c(rep(row_means[1] + alphas[1] + betas[1], 2), #r1_1
rep(row_means[1] + alphas[1] + betas[2], 2), #r1_2
rep(row_means[2] + alphas[2] + betas[3], 2), #r2_1
rep(row_means[2] + alphas[2] + betas[4], 2), #r2_2
rep(row_means[2] + alphas[3] + betas[5], 2), #r3_1
rep(row_means[2] + alphas[3] + betas[6], 2)) #r3_2
y_hat
all <- c(39.5, 38.6, 27.2, 24.6, 43.1, 39.5, 23.2, 24.2, 45.2, 33.0, 24.8, 22.2) #reorganizing the order to match
print(y_hat)
all <- c(39.5, 38.6, 27.2, 24.6, 43.1, 39.5, 23.2, 24.2, 45.2, 33.0, 24.8, 22.2); all #reorganizing the order to match
#variance of replications
r_effect <- sum((row_means - grandmean)^2); r_effect
sigma2 <- (1/(3-1))*(1/(2-1))*(1/(2-1))*sum((all-y_hat)^2)
a <- var(c(m1_1, m1_2))
b <- var(c(m2_1, m2_2))
c <- var(c(m3_1, m3_2))
p_r_effect <- 2*mean(c(a,b,c)); p_r_effect
p_r_effect <- 2*mean(c(a,b,c)); p_r_effect
gm_p_effect <- sigma2; gm_p_effect
var_species_means <- (3/(3-1)) * sum((column_means-all_mean)^2)
#for testing alpha:
Fobs_a <- r_effect/p_r_effect; Fobs_a
#for testing sigma^2_b:
Fobs <- p_r_effect/gm_p_effect; Fobs
Fcrit <- qf(p=.95, df1=3, df2=6); Fcrit
setwd("~/Desktop/stats 2/FINAL PROJECT")
#install.packages("dagitty")
#install.packages("ggdag")
library(ggplot2)
library(ggdag)
library(dplyr)
#provided data files
att <- read.csv("Stats-Final-Project/Attributes.csv") %>%  # file of participant attributes
mutate(PPID = as.character(PPID))
sna1 <- read.csv("Stats-Final-Project/SNA_T1.csv")      # time 1 network data
sna2 <- read.csv("Stats-Final-Project/SNA_T2.csv")      # time 1 network data
# final datasets after running FromNets_OnlineMaterial.R - quantified social network strengths
# the 290 students who completed the intervention
int290 <- read.csv("Stats-Final-Project/int290.csv")  %>%
mutate(PPID = as.character(PPID))
# the 226 students who completed
complet226 <- read.csv("Stats-Final-Project/complet226.csv") %>%
mutate(PPID = as.character(PPID))
#provided data files
att <- read.csv("Stats-Final-Project/Attributes.csv") %>%  # file of participant attributes
mutate(PPID = as.character(PPID))
sna1 <- read.csv("Stats-Final-Project/SNA_T1.csv")      # time 1 network data
sna2 <- read.csv("Stats-Final-Project/SNA_T2.csv")      # time 1 network data
# final datasets after running FromNets_OnlineMaterial.R - quantified social network strengths
# the 290 students who completed the intervention
int290 <- read.csv("Stats-Final-Project/int290.csv")  %>%
mutate(PPID = as.character(PPID))
# the 226 students who completed
complet226 <- read.csv("Stats-Final-Project/complet226.csv") %>%
mutate(PPID = as.character(PPID))
# final datasets after running FromNets_OnlineMaterial.R - quantified social network strengths
# the 290 students who completed the intervention
int290 <- read.csv("Stats-Final-Project/int290.csv")
int290$PPID <- as.character(int290$PPID)
#provided data files
att <- read.csv("Stats-Final-Project/Attributes.csv")  # file of participant attributes
sna1 <- read.csv("Stats-Final-Project/SNA_T1.csv")      # time 1 network data
sna2 <- read.csv("Stats-Final-Project/SNA_T2.csv")      # time 1 network data
setwd("~/Desktop/stats 2/FINAL PROJECT/Stats-Final-Project")
#install.packages("dagitty")
#install.packages("ggdag")
install.packages('plyr', repos = "http://cran.us.r-project.org")
install.packages("plyr", repos = "http://cran.us.r-project.org")
## Load custom functions
source("Functions_OnlineMaterial.R")
source(file="FormNets_OnlineMaterial.R")
install.packages("igraph")
source("FormNets_OnlineMaterial.R")
